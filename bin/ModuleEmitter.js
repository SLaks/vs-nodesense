"use strict";

var path = require('path');
var fs = require('fs');
var JSWriter = require('./JSWriter');

/**
 * This class emits references to all module definitions.
 */
function ModuleEmitter(projectDir, outputDir) {
	this.referencesDir = outputDir + 'preludes/';
	this.projectDir = projectDir;
	this.outputDir = outputDir;

	// This file declares paths to all modules for the async loader.
	this.declarationsFile = new JSWriter(outputDir + 'module-declarations.js');
	this.declarationsFile.writeline('// This file is generated by vs-nodesense.');

	// Holds IDs of all modules that have already been defined.
	this.emittedModules = Object.create(null);
}
module.exports = ModuleEmitter;

ModuleEmitter.prototype.writeAlias = function (alias, moduleId) {
	this.declarationsFile.writeAssignment('require._aliases[' + JSON.stringify(alias) + ']', moduleId);
};

/**
 * Writes a reference to a module script file to 
 * the current output file
 */
ModuleEmitter.prototype.writeModuleDeclaration= function (moduleId, sourcePaths) {
	// For convenience in the IntelliSense code, all modules must be self-aliased.
	this.writeAlias(moduleId, moduleId);

	// If this is an index file, add an alias for its directory.
	if (/\/index\.[a-z]+$/.test(moduleId)) {
		var dir = path.dirname(moduleId) + '/';
		this.writeAlias(dir, moduleId);
	}

	this.declarationsFile.writeAssignment('require._definitions[' + JSON.stringify(moduleId) + ']', sourcePaths);
};
/**
 * Starts a new output file.
 * @param {String} moduleId	The path to the module defined in the file.  This is used to pick a relevant filename.
 */
ModuleEmitter.prototype.createPreludeFile = function (moduleId) {
	var relativePath = path.relative(this.projectDir, moduleId).replace(/\.\./g, '--').replace(/^\//, '');
	var targetPath = path.resolve(this.referencesDir, relativePath);

	if (!path.extname(targetPath))
		targetPath += '.js';  // Add extensions to built-in modules

	var index = 0;
	while (fs.existsSync(targetPath))
		targetPath = targetPath.replace(/\.[a-z]+$/i, (++index) + "$1");

	var file = new JSWriter(targetPath);
	file.writeline('/* global intellisense */');
	file.writeline('// This file is generated by vs-nodesense.');
	// TODO: Reference module.js?
	file.write('intellisense.enterModuleDefinition(');
	file.write(JSON.stringify(moduleId));
	file.write(');\r\n');
	file.end();
	return targetPath;
};

/**
 * Emits a complete reference to the given module
 * @param {String} moduleId	The full module ID, as passed to require().
 * @param {String} [filePath]	The path to the module source code.  If omitted, the module ID is assumed to be a filepath.  This parameter is intended for built-in modules.
 */
ModuleEmitter.prototype.emitFile = function (moduleId, filePath) {
	moduleId = require.resolve(moduleId).replace(/\\/g, '/');

	if (this.emittedModules[moduleId])
		return;
	this.emittedModules[moduleId] = true;

	// TODO: Handle JSON (only one file)
	var preludePath = this.createPreludeFile(moduleId);

	this.writeModuleDeclaration(moduleId, [preludePath, filePath || moduleId]);
};

/**
 * Closes all files created by the emitter 
 */
ModuleEmitter.prototype.end = function () {
	this.declarationsFile.end();
};